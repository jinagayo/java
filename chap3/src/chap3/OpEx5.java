package chap3;
/*
 * 비트 연산자 : &(AND), |(OR), ^(XOR)
 */

public class OpEx5 {

	public static void main(String[] args) {
		System.out.println(6&3);
		/*
		 * 6 : 00000110
		 * 3 : 00000011
		 * ============
		 * & : 00000010 : 2     (0=false, 1=true)
		 */
		System.out.println(6|3);
		/*
		 * 6 : 00000110
		 * 3 : 00000011
		 * ============
		 * & : 00000111 : 7     (0=false, 1=true)
		 */
		System.out.println(6^3);
		/*
		 * 6 : 00000110
		 * 3 : 00000011
		 * ============
		 * ^ : 00000101 : 5     (0=false, 1=true)
		 */
		System.out.println(~10);    // NOT,  0->1,  1->0
		/*
		 * 10 : 00001010
		 * =============
		 * ~  : 11110101            
		 * 가장 왼쪽 비트 = 부호비트   (0:양수, 1:음수)
		 * => 모든 프로그램은 음수를 2의 보수로 표현함.    
		 * 2의 보수 : 1의 보수 + 1   (1의 보수 관계: 1->0,  0->1)
		 * 
		 * 11110101 : 2의 보수  (보수에 보수를 취하면 원래 값) 
		 * 
		 * 11110101 의 1의 보수 => 00001010
		 * 11110101 의 2의 보수 => 00001011: 11
		 * 
		 */

	}

}
